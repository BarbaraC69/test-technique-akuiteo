{"ast":null,"code":"import _readOnlyError from \"C:\\\\Users\\\\33625\\\\Desktop\\\\Entrainement\\\\test-technique-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\readOnlyError.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\33625\\\\Desktop\\\\Entrainement\\\\test-technique-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\33625\\\\Desktop\\\\Entrainement\\\\test-technique-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { EventEmitter } from \"@angular/core\";\nimport { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/checkbox\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\n\nfunction PersonGeneratorComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" Au moins un genre doit \\xEAtre s\\xE9lectionn\\xE9 pour g\\xE9n\\xE9rer la liste. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport var PersonGeneratorComponent = /*#__PURE__*/(function () {\n  var PersonGeneratorComponent = /*#__PURE__*/function () {\n    function PersonGeneratorComponent(formBuilder) {\n      _classCallCheck(this, PersonGeneratorComponent);\n\n      this.formBuilder = formBuilder;\n      this.allGeneratedPersons = [];\n      this.generateRequest = new EventEmitter();\n    }\n\n    _createClass(PersonGeneratorComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.generator = this.formBuilder.group({\n          count: [10, [Validators.min(0), Validators.max(1000)]],\n          male: [false],\n          female: [true]\n        }, {\n          validators: this.requireOne\n        });\n      }\n    }, {\n      key: \"generate\",\n      value: function generate() {\n        var value = this.generator.value;\n        if (this.generator.valid) this.generateRequest.emit(value);\n      }\n    }, {\n      key: \"requireOne\",\n      value: function requireOne(formGroup) {\n        var male = formGroup.get('male').value;\n        var female = formGroup.get('female').value;\n\n        if (male || female) {\n          return null;\n        } else {\n          return {\n            requireOne: true\n          };\n        }\n      }\n    }, {\n      key: \"limitNumberInput\",\n      value: function limitNumberInput() {\n        var countFormControl = this.generator.get('count');\n        var enteredValue = countFormControl.value;\n\n        if (enteredValue < 0) {\n          0, _readOnlyError(\"enteredValue\");\n\n          if (enteredValue > 100) {\n            countFormControl.setValue(Math.trunc(enteredValue / 10), {\n              emitEvent: false\n            });\n          }\n        }\n      }\n    }]);\n\n    return PersonGeneratorComponent;\n  }();\n\n  PersonGeneratorComponent.ɵfac = function PersonGeneratorComponent_Factory(t) {\n    return new (t || PersonGeneratorComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  PersonGeneratorComponent.ɵcmp = i0.ɵɵdefineComponent({\n    type: PersonGeneratorComponent,\n    selectors: [[\"app-person-generator\"]],\n    outputs: {\n      generateRequest: \"generateRequest\"\n    },\n    decls: 18,\n    vars: 3,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"title\"], [1, \"hint\"], [1, \"count\"], [\"matInput\", \"\", \"type\", \"number\", \"placeholder\", \"Nombre\", \"formControlName\", \"count\", \"id\", \"inputCount\", 3, \"keydown\"], [1, \"container\"], [1, \"gender\"], [\"formControlName\", \"male\", 1, \"Homme\"], [\"formControlName\", \"female\", 1, \"Femme\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"actions\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 1, \"button-golden\", 3, \"disabled\"], [1, \"error-message\"]],\n    template: function PersonGeneratorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function PersonGeneratorComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.generate();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"h3\");\n        i0.ɵɵtext(3, \"Crit\\xE8res de g\\xE9n\\xE9ration :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵtext(5, \" Veuillez saisir le nombre de personnes \\xE0 g\\xE9n\\xE9rer ainsi que le choix du genre. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"mat-form-field\", 3)(7, \"input\", 4);\n        i0.ɵɵlistener(\"keydown\", function PersonGeneratorComponent_Template_input_keydown_7_listener() {\n          return ctx.limitNumberInput();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 6)(10, \"mat-checkbox\", 7);\n        i0.ɵɵtext(11, \"Homme\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-checkbox\", 8);\n        i0.ɵɵtext(13, \"Femme\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, PersonGeneratorComponent_div_14_Template, 2, 0, \"div\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 10)(16, \"button\", 11);\n        i0.ɵɵtext(17, \"G\\xE9n\\xE9rer\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.generator);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngIf\", ctx.generator.invalid && ctx.generator.controls.male.value === false && ctx.generator.controls.female.value === false);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.generator.invalid);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i2.MatFormField, i3.MatInput, i1.NumberValueAccessor, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.MatCheckbox, i5.NgIf, i6.MatButton],\n    styles: [\"form[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center}form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%], form[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{flex:1;align-items:center;display:flex;justify-content:center}form[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{flex-direction:column}form[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{font-style:italic;font-size:.7em}form[_ngcontent-%COMP%]   .count[_ngcontent-%COMP%]{flex:1}form[_ngcontent-%COMP%]   .gender[_ngcontent-%COMP%]{display:flex;justify-content:center}form[_ngcontent-%COMP%]   .gender[_ngcontent-%COMP%]   mat-checkbox[_ngcontent-%COMP%]{width:150px}form[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]{display:flex;align-items:center}form[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{color:red;font-size:14px;position:absolute;top:37%;left:61.4%;transform:translate(-50%)}form[_ngcontent-%COMP%]   .button-golden[_ngcontent-%COMP%]:hover{background-color:#daa520}\"]\n  });\n  return PersonGeneratorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}